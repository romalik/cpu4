before call:
|........|
|..arg3..|
|..arg2..|
|..arg1..|
|..arg0..|
|++++++++| <- SP
|        |
call:
sp++ (reserve return) size = opsize(CALL)
pc->m[sp] sp++(return addr)
sp->bp(Z)
|........|
|..arg3..|
|..arg2..|
|..arg1..|
|..arg0..|
|+retval+|
|+retadr+|
|        | <- SP <- BP

prolog:
alloc locals ( + spill ?)
|........|
|..arg3..|
|..arg2..|
|..arg1..|
|..arg0..|
|+retval+|
|+retval+|
|+retadrl|
|+retadrh|
|.local0.| <- BP
|.local1.|
|.local2.|
|.local3.|
|.spill0.|
|.spill1.|
|.spill2.|
|.spill3.|
|        | <- SP

mid-function:
|........|
|..arg3..|
|..arg2..|
|..arg1..|
|..arg0..|
|+retval+|
|+retval+|
|+retadrl|
|+retadrh|
|.local0.| <- BP
|.local1.|
|.local2.|
|.local3.|
|.spill0.|
|.spill1.|
|.spill2.|
|.spill3.|
|........|\
|.stuff..| | - current_off
|........|/
|        | <- SP

access locals : off(X) = current_off + n_spill + n_locals - X ; m[SP-off]
access args   : off(X) = current_off + n_spill + n_locals + 2(retaddr) + size(retval??) + 1 + X ; m[SP-off]
access retval : off(X) = current_off + n_spill + n_locals + 2(retaddr) + 1
n_locals = global maxoffset